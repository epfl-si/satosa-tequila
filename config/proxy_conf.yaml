# Main configuration file for SATOSA
BASE: !ENV SATOSA_BASE_URL
COOKIE_STATE_NAME: "SATOSA_STATE"

cookies_samesite_compat:
  - - SATOSA_STATE
    - SATOSA_STATE_LEGACY
INTERNAL_ATTRIBUTES:
  # Where SATOSA should pick the user's unique identifier from.
  user_id_from_attrs:
    - user
  attributes:
    # First-order keys are back-end (Tequila) attributes; second-order
    # keys are frontend types (in our case, always `openid:`; values
    # are the fields that they map to (and they must be in a list for
    # some reason).
    email:
      openid: [email]

    user:
      openid: [preferred_username]

    firstname:
      openid: [given_name]
    lastname:
      openid: [name]

    group:
      openid: [groups]

STATE_ENCRYPTION_KEY: !ENV STATE_ENCRYPTION_KEY
BACKEND_MODULES:
  - module: epfl.tequila_backend.TequilaBackend
    name: tequila
    config: {}

FRONTEND_MODULES:
  - # OpenID-Connect frontend (app-facing) configuration
    module: satosa.frontends.openid_connect.OpenIDConnectFrontend
    name: OIDC
    config:
      provider:
        client_registration_supported: no
        response_types_supported: ["code", "id_token token"]
        subject_types_supported: ["pairwise"]
        scopes_supported:
        - openid
        - email
        - profile
        - tequila
        extra_scopes:
          tequila:
          - groups
      signing_key_path: /etc/satosa/frontend.key   # Generated by the Docker entry point
      signing_key_id: oidc_key
      client_db_path: /data/clients.json

LOGGING:
  version: 1
  formatters:
    simple:
      format: '[%(asctime)s] [%(levelname)s] [%(name)s.%(funcName)s] %(message)s'
  handlers:
    stdout:
      class: logging.StreamHandler
      stream: ext://sys.stdout
      level: DEBUG
      formatter: simple
  loggers:
    satosa:
      level: DEBUG
    saml2:
      level: DEBUG
    oidcendpoint:
      level: DEBUG
    pyop:
      level: DEBUG
    oic:
      level: DEBUG
  root:
    level: DEBUG
    handlers:
      - stdout
