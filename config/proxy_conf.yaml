# Main configuration file for SATOSA
BASE: https://satosa-127-0-0-1.nip.io
COOKIE_STATE_NAME: "SATOSA_STATE"

cookies_samesite_compat:
  - - SATOSA_STATE
    - SATOSA_STATE_LEGACY
INTERNAL_ATTRIBUTES: /etc/satosa/config/internal_attributes.yaml
STATE_ENCRYPTION_KEY: !ENV STATE_ENCRYPTION_KEY
BACKEND_MODULES:
  - module: satosa.backends.saml2.SAMLBackend
    name: tequila
    config:
      mirror_force_authn: no
      memorize_idp: no
      use_memorized_idp_when_force_authn: no

      sp_config:
        # We don't actually sign anything SAML during steady-state
        # operation. Pass the bogus key and cert generated by the Docker
        # entry point:
        key_file: /etc/satosa/backend.key
        cert_file: /etc/satosa/backend.crt
        organization: {display_name: EPFL, name: EPFL, url: 'https://www.epfl.ch'}
        contact_person:
        - {contact_type: technical, email_address: 1234@epfl.ch, given_name: Technical}
        - {contact_type: support, email_address: 1234@epfl.ch, given_name: Support}
        # See the “pysaml2-attribute-maps” ConfigMap object in ../satosa-k8s-objects.yaml for an explanation:
        attribute_map_dir: /etc/satosa/config/attributemaps
        entityid: https://satosa-127-0-0-1.nip.io/tequila
        metadata:
          remote:
            - url: "https://tequila.epfl.ch/metadata.tequila-IdP-new.xml"

        accepted_time_diff: 60
        service:
          sp:
            allow_unsolicited: true
            endpoints:
              assertion_consumer_service:
              - ["https://satosa-127-0-0-1.nip.io/tequila/acs/post", 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST']
              discovery_response:
              - ["https://satosa-127-0-0-1.nip.io/tequila/disco", 'urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol']
            name_id_format: 'urn:oasis:names:tc:SAML:2.0:nameid-format:transient'
            # A name_id_format of 'None' will cause the authentication request to not
            # include a Format attribute in the NameIDPolicy.
            # name_id_format: 'None'
            name_id_format_allow_create: true
FRONTEND_MODULES:
  - # OpenID-Connect frontend (app-facing) configuration
    module: satosa.frontends.openid_connect.OpenIDConnectFrontend
    name: OIDC
    config:
      provider:
        client_registration_supported: no
        response_types_supported: ["code", "id_token token"]
        subject_types_supported: ["pairwise"]
        scopes_supported:
        - openid
        - email
        - profile
        - tequila
        extra_scopes:
          tequila:
          - groups
      signing_key_path: /etc/satosa/frontend.key   # Generated by the Docker entry point
      signing_key_id: oidc_key
      client_db_path: /data/clients.json

MICRO_SERVICES:
  - module: satosa.micro_services.attribute_modifications.AddStaticAttributes
    name: AddAttributes
    config:
        static_attributes:
            organisation: EPFL
            schachomeorganization: epfl.ch
            schachomeorganizationtype:
            - "urn:schac:homeOrganizationType:eu:higherEducationInstitution"
            - "urn:schac:homeOrganizationType:eu:educationInstitution"
            organizationname: EPFL
            noreduorgacronym: CH
            countryname: CH
            friendlycountryname: Switzerland

  - module: epfl.micro_services.TequilaRequire
    name: TequilaRequire
    config: {}

LOGGING:
  version: 1
  formatters:
    simple:
      format: '[%(asctime)s] [%(levelname)s] [%(name)s.%(funcName)s] %(message)s'
  handlers:
    stdout:
      class: logging.StreamHandler
      stream: ext://sys.stdout
      level: DEBUG
      formatter: simple
  loggers:
    satosa:
      level: DEBUG
    saml2:
      level: DEBUG
    oidcendpoint:
      level: DEBUG
    pyop:
      level: DEBUG
    oic:
      level: DEBUG
  root:
    level: DEBUG
    handlers:
      - stdout
