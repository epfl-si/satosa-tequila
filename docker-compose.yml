# This docker-compose.yml file is intended for development support. It
# is *not* meant for production.

version: '3'
name: satosa

services:
  satosa:
    image: satosa-tequila:latest
    build: .
    environment:
      - DEBUG_DISABLE_GUNICORN_TIMEOUTS=1
      - SATOSA_BASE_URL=https://satosa-127-0-0-1.nip.io
      # Adjust these to your Kubernetes server:
      - KUBERNETES_SERVICE_HOST=api.mgmt.ocp-test.epfl.ch
      - KUBERNETES_SERVICE_PORT=6443
    volumes:
      # These mounts make it easier to enbug the whole thing, but you
      # could actually run the container without them:
      - ./custom-entrypoint.sh:/custom-entrypoint.sh:ro
      - ./config/proxy_conf.yaml:/etc/satosa/proxy_conf.yaml:ro
      - ./site-python/epfl:/usr/local/lib/python3.12/site-packages/epfl:ro
      # These ones need to be persistent (also in Kubernetes) or
      # you're gonna have a bad time (with browser alerts resp. the
      # OIDC client database):
      - ./tls:/tls:ro
      # Kubernetes will take care of this one for you:
      - ./k8s-credentials:/var/run/secrets/kubernetes.io/serviceaccount:ro
      # - "/Users/quatrava/Library/Application Support/JetBrains/IntelliJIdea2023.1/plugins/python/debugger-eggs-output/pydevd-pycharm.egg:/pydevd-pycharm.egg:ro"
      - ./data:/data:ro
      - ./config:/config:ro
    ports:
      # We must be visible to browsers at port 443, as these days
      # Tequila doesn't belive in redirecting, nor POSTing, to any
      # other port (and while you could deal with the former using the
      # Redirector browser plug-in, the latter is more tricky.)
      - "127.0.0.1:443:8443"
      # Uncomment for debugpy:
      - "127.0.0.1:5678:5678"
volumes:
  mariadb: {}
